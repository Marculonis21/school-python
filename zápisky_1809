GNU/GPL (GNU = GNU not Unix, GPL = general public licence)
Linux, BSD (FreeBSD, OpenBSD)
TERMINÁL
pwd
cd / = change directory
	cd = domácí složka
ls = výpis
	ls -l = long - dlouhý výpis
	ls -la = skryté soubory
šipkou vyvolám předchozí příkaz
když text v prvním sloupci začíná:
	d = directory
	l = link
	- = domkument
tabulátor doplňuje slova Dok -> Dokumenty (píšu dokud mi nefunguje tabulátor - má více možností na doplnění)
Ctrl+L = maže příkazy
home	-> ru	-> dokumenty
		-> download
relativní cesta: cd ../Download
absolutní cesta (začíná domácí složkou - začíná /): cd /home/ru/Download
~ = domácí adresář
.. = nadřazený adresář -> cd ../.. (o 2 odresáře nahoru)
*.py = pro všechny soubory s koncovkou .py
./ = cesta - pustí program - př.: ./deset_cisel.py (ukončím Ctrl+C)
which ls = kde je
mkdir = nový adresář
rmdir = smazání adresáře - musí být prázdný
cp = kopírování souboru
rm = smazání souboru, linku
	rm -r = smazání celého odresáře (rekursivní mazání - od této složky smaže vše)
mv = přemístění
hard link:
	soubor.txt \
		    -> i-node -> data
	odkaz1.txt /
	nejsou na sobě závislí - můžu smazat soubor.txt
soft link:
	odkaz1.txt -> soubor.txt -> i-node -> data
	jsou na době závislí - nelze smazat původní soubor bez ztráty dat
ln -s = utvoření linku
vim = textový editor (nepoužívá Ctrl, Alt)
	- 3 režimy: prohlížecí, psací, čekající na příkazy
	- psaní do textu - Insert
	- psaní příkazů - Esc 	-> :w (zapsat)
				-> :q (uložit)
				-> :u (zpět)
	- mazání řádku v prohlížecím režimu: dd
manuálové stránky - man (+ příkaz)
	-> vyhledávání = /
	-> konec = q
rozlišují se malé a velké znaky
práva: r - read, w - write, x - execute (spustit)
práva se nastavují těmto: u - owner, g - group, o - others
UID - user ID
GID - group ID
PID - process id
oktanová soustava = osmičková soustava (3 bity)
-rw-r-xr--
	-	rw-	r-x	r--
	typ	u	g	o
	souboru	110	101	100
		6	5	4
typ souboru např. d - directory (složka)
oktanová soustava - vyjádření práv 3 číslice v oktanové soustavě - nejčastěji pro běžný soubor 644, pro spustitelný soubor 755
nastavení práv: chmod (př.: chmod 735 progr1.py) - číslo za chmod vyjádření práv
dlouhý výpis:
práva		počet hard linků	owner	group
-rw-r-xr--	1			ru	users
pro složky r - číst, w - měnit obsah, x - spustitelné z terminálu
systém funguje v číslech (UID, GID)
id = napíše moje UID a GID
top = procesy v systému - PID, USERS (na čem to běží - práva), S (stav - sleeping, running, waiting)
			- load average - čísla ukazující vytížení systému (čísla začínající 0 -> skoro nepracuje)
ps = komunikace s procesy
ps -aux = vypíše procesy
| = pipe (spojuje příkazy)
ps -aux | less = statický výpis procesů, ve kterém se lze pohybovat, lze v něm i vyhledávat (/vyhledávané)
ps aux | grep vyhledávané = vyfiltruje pouze řádky s vyhledávaným slovem
kill = zrušení procesu, zadává se s PID
htop = podobné jako top, lze použít na rušení procesů jako kill
	- pomocí F9 se dají najít čísla příklazů, např. 15 SIGTERM, 9 SIGKILL
příkazová řádka
	- linuxové příkazy v pgm2 v pdf
	- shell - interpreter příkazového řádku
		- např. bash
	- lze psát skripty nebo jen příkazy stejně jako v pyshell (akorát tam interpreter pythonu, zde interpreter bashe)
	- kolona - příkazy oddělené |
		 - klávesnice			 pipe			obrazovka
			stdin -> příkaz1 -> stdout  stdin -> příkaz2 -> stdout
		 - ls -l | more = stránkuje dlouhý výpis
		 - ls -al | less = lze se pohybovat
		 - ps aux | less
		 - ps aux | grep helnova | less
	- seznamy - příkaz1; příkaz2; příkaz3; ... = postupně vykoná příkazy
		  - spojka && = druhý se provede pouze pokud první se provede bez chyby
		  - spojka || = druhý se provede pouze pokud první vrátí chybový stav
		  - spojka & = spuštění příkazui na pozadí - příkazy na sebe nečekají, první se spustí v nové kopii shellu a přesune se do pozadí
	- stdin = standartní vstup, většinou klávesnice
	- stdout = standartní výstup, většinou monitor

	- > = přesměrování stdout, např. ls > s.txt (přesměrování do nově vytvořeného textového souboru), ls > /dev/lpr (přesměrování na tiskárnu)
	- < = přesměrování stdin
	- stderr = standartní výstup s errorem
	- 2> = přesměrování chybového výstupu, např. ls adr1 2> /dev/null (chybové hlášení se úplně vymaže, nikde se nehromadí)

###
https://www.pslib.cz/milan.kerslager/BASH:_Skriptování
shellové skripty - "hashmark" '#!/bin/bash'
	- musí být spustitelné
	- odsazování není nutné! + case sensitive

	příkazy:
		- echo == print
		- zakládání proměnné "a = 'abc'"
		- ->echo $a (výpis) 
		- high level: echo "v proměnné a je hodnota $a"
		- bash příkazy do skriptu: echo "výpis adresáře $(ls -al)"

		- předávání parametrů echo ($1 $2)

		- if: 
		"if [ -f /tmp/IamHere ]; then
		"	echo "Jsem tu"
		"fi
		
		příkaz když true
		"[ výraz ] && příkaz 
		X
		příkaz když false
		"[ výraz ] || příkaz	
		
		
		- while:
		"while true; do
		"
		"done

		- for:
		"for POLOZKA in a b c d
		"do
		"	echo $POLOZKA
		"done
		
		"for i in $KOUPIT; do
		"	echo $s!

		- čtení vstupu: read Vstup
		
		"done

		- echo "echo -n mažu" (-n neřádkuje) 

		- split v bash
		" echo $s | awk -F'.' '(print $1)'
		(awk separuje pomocí '.' -> vypíše první proměnnou)
		(když nezadám separátor -> rozdělí slova pomocí mezer

du - shell příkaz, velikost souborů v adresáři
	-s (sumarrize)
	-h (humanreadable)

cat něco >> něco někam
	- přesměrování obsahu souboru na jinou polohu (>> append) (> make new)
	

Virtualizace - pc v softwaru 
	- hardware + software Hypervizor
	- hypervizor může být i bez systému
	- virtualizace se musí povolit v biosu
	- virtualbox, KVM
	-----------------
	- připojení ve škole
	
	ferda login: root
	password: you know what I mean
	
	- "Správce virtuálních strojů -> nové připojení"
	- uživatelské jméno - vuser
	- host - vh
	- adduser jméno
	- usery v /home/ nebo v cat /etc/passwd
		kralik:x:1000:1000:/home/kralik: /bin/bash
		login:password:UID:GID:HOMEDIR:SHELL
	
	- změna hesla - passwd user
	- heslo userů cat /etc/shadow
	- userdel -rf jméno (r adresář; f force i kdyby tam byl)

	- reboot pro restart
	- yum install balík (pro instalaci)
	- uname -r - kernel info
	- ip addr - net/connection info
	- ifconfig
	- vlastní ipv4: 10.12.0.161 (pamatovat)
	- service (kouknout na program (deamon) běžící na pozadí)
	#Přihlašování na dálku	
	- sshd server
	- ssh klient (připojování mezi pc)
	- "ssh [jméno clienta]@[ip]" -> root heslo
		"root@10.12.0.161" - > root heslo

	- na pc who/w pro usery
	- copy na server scp [(co) (komu):(kam)]
	
	- do .bashrc alias na připojení na server 
		"alias bringmeferda='ssh root@10.12.0.161'"

-tvl https://www.reddit.com/r/unixporn/comments/dekj2i/oc_a_spotify_terminal_user_interface_written_in/
